@use '@styles/media.scss' as Media;

@layer base {
    :root {
        --color-gray-dark: #303030;
        --color-green: #0B532A;
        --color-orange: #FADFBD;
        --color-offwhite: #FEFEE3;
        --color-white: white;
        --color-black: #161616;

        --font-title: "Playfair Display SC", serif;
        --font-body: "Playfair", serif;
        --font-deco: "Domine", serif;

        --space-tiny: 0.5rem;
        --space-base: 0.625rem;
        --space-line: 1rem;
        --space-small: 2rem;
        --space-medium: 3rem;
        --space-large: 5rem;
        --space-extra-large: 8rem;
    }

    html {
        scroll-behavior: smooth;
    }

    * {
		/* Foreground, Background */
		scrollbar-color: #999 #333;
	}
	*::-webkit-scrollbar {
		width: 6px; /* Mostly for vertical scrollbars */
		height: 2px; /* Mostly for horizontal scrollbars */
	}
	*::-webkit-scrollbar-thumb { /* Foreground */
		background: #999;
	}
	*::-webkit-scrollbar-track { /* Background */
		background: #333;
	}

    body {
        margin: 0;
        width: 100vw;
        min-height: 100vh;
        overflow-x: hidden;
    }

    hgroup {
        display: flex;
        flex-direction: column;
        gap: var(--space-base);
    }

    h1, h2 {
        color: var(--color-green);
        font-family: var(--font-title);
        font-weight: 400;
        text-transform: capitalize;
        margin: 0;
    }
    h3, h4, h5, h6 {
        font-family: var(--font-body);
        font-weight: 600;
        line-height: 1.2;
        margin: 0;
    }

    h1 {
        font-size: 2.75rem;
    }
    h2 {
        font-size: 1.75rem;
    }
    h3 {
        font-size: 1.5rem;
    }
    h4 {
        font-size: 1.25rem;
    }
    h5 {
        font-size: 1.125rem;
    }
    p {
        max-width: 50em;
    }
    p, span {
        &.title {
            font-weight: 600;
            text-transform: capitalize;
        }
        
        &.legal {
            font-size: 1rem;
            font-style: italic;
        }

        &.tag {
            font-weight: 600;
            text-transform: capitalize;
            font-size: 0.875rem;
            color: var(--color-green);
        }
    }
    a, p {
        font-size: 1.125rem;
        font-family: var(--font-body);
    }
    a {
        --color-link: var(--color-green);

        &.white {
            --color-link: var(--color-white);
        }

        cursor: pointer;
        color: var(--color-link);
        text-decoration: none;
        font-style: italic;
        width: fit-content;
        
        &:visited {
            --color-link: color-mix(in srgb, var(--color-green) 80%, var(--color-orange) 20%);
        }
        
        @include Media.at('medium') {
            &:not(:has(img), &.button) {
                display: inline-block;
                position: relative;
                
                &:has(.inner) {
                    span.inner {
                        display: inline-block;
                        transition: translate 300ms ease-out;
                    }
                    &.external span.inner {
                        display: inline-flex;
                        align-items: center;

                        &::after {
                            content: "";
                            display: inline-block;
                            background-image: url('../assets/images/external-link.svg');
                            background-size: contain;
                            width: auto;
                            height: 1em;
                            aspect-ratio: 1 / 1;
                            margin-left: 0.25em;
                        }
                    }
                    
                    &::before, &::after {
                        content: "";
                        display: block;
                        height: clamp(1px, 0.1rem, 4px);
                        width: 0;
                        background-color: var(--color-link, black);
                        
                        position: absolute;
                        bottom: 0;
                        
                        transition: width 300ms ease-out;
                    }
                    &::before {
                        left: 0;
                    }
                    &::after {
                        right: 0;
                    }
                    
                    &:hover {
                        span.inner {
                            translate: 0px clamp(-2px, -0.1rem, -4px);
                        }
                        
                        &::before, &::after {
                            width: calc(50% + 0.1rem);
                        }
                    }
                }
                &:not(:has(.inner)) {
                    &::before {
                        content: "";
                        display: block;
                        height: clamp(1px, 0.05rem, 4px);
                        width: 0;
                        background-color: var(--color-link, black);
                        
                        position: absolute;
                        bottom: 0.1rem;
                        
                        transition: width 300ms ease-out;
                    }
                    &::before {
                        right: 0;
                        width: 0%;
                    }
                    
                    &:hover {
                        &::before, &::after {
                            left: 0;
                            width: 100%;
                        }
                    }

                    &.external {
                        display: inline-flex;
                        align-items: center;
                        
                        &::after {
                            content: "";
                            display: inline-block;
                            background-image: url('../assets/images/external-link.svg');
                            background-size: contain;
                            width: auto;
                            height: 1em;
                            aspect-ratio: 1 / 1;
                            margin-left: 0.25em;
                        }
                    }
                }
            }
        }
        
        &.button {
            --color: var(--color-green);
            --color-text: var(--color-white);
            &.white {
                --color: var(--color-white);
                --color-text: var(--color-black);
            }


            display: inline-block;
            
            border: var(--color) 2px solid;
            color: var(--color);

            &.alt {
                border: none;
                background-color: var(--color);
                color: var(--color-text);
            }

            padding: calc(1.2 * var(--space-tiny)) var(--space-line) var(--space-tiny);
            @include Media.at('medium') {
                padding: calc(1.2 * var(--space-base)) var(--space-small) var(--space-base);
            }

            font-family: var(--font-body);
            line-height: 1;
            text-align: center;

            filter: drop-shadow(2px 3px 4px #4b4b4b1a);

            &.background {
                background-color: color-mix(in srgb, transparent 90%, var(--color-black) 5%);
                backdrop-filter: blur(2px);
            }

            &:hover {
                scale: 1.05;
            }

            transition: scale 200ms ease-in-out;
        }
    }

    button {
        cursor: pointer;
    }

    input:focus {
        outline-color: var(--color-green);
    }

    img {
        color: var(--color-offwhite);
        font-size: 8px;
    }

    ul {
        margin: var(--space-tiny) 0;
        padding-left: var(--space-line);
    }
}

@layer animations {
    .flip-in-text {
        --animation-duration: 1500ms;
        --animation-delay: 200ms;
        --base-animation-delay: 0ms;
        --animation-timing-function: ease;

        .word {
            display: inline-block;
            overflow: hidden;
            transform: rotateX(-60deg);

            animation-name: rotate-up;
            animation-duration: var(--animation-duration);
            animation-timing-function: var(--animation-timing-function);
            animation-delay: calc(var(--base-animation-delay) + var(--animation-delay));
            animation-iteration-count: 1;
            animation-direction: normal;
            animation-fill-mode: forwards;

            .inner-word {
                transform: translateY(100%);

                display: inline-block;
                animation-name: move-up;
                animation-duration: calc(var(--animation-duration) / 2);
                animation-timing-function: var(--animation-timing-function);
                animation-delay: calc(var(--base-animation-delay) + var(--animation-delay) + 100ms);
                animation-iteration-count: 1;
                animation-direction: normal;
                animation-fill-mode: forwards;
            }
        }
    }

    .expand-in {
        display: inline-block;
        white-space: nowrap;
        max-width: 0;
        overflow: hidden;
        animation-name: expand-in;
        animation-duration: var(--animation-duration, 1000ms);
        animation-timing-function: var(--animation-timing-function, ease);
        animation-delay: var(--animation-delay, 0ms);
        animation-iteration-count: 1;
        animation-direction: normal;
        animation-fill-mode: forwards;
    }

    .fade-in {
        opacity: 0;
        animation-name: fade-in;
        animation-duration: var(--animation-duration, 1000ms);
        animation-timing-function: var(--animation-timing-function, ease-in);
        animation-delay: var(--animation-delay, 0ms);
        animation-iteration-count: 1;
        animation-direction: normal;
        animation-fill-mode: forwards;
    }

    .fade-image-in {
        opacity: 0;
        animation-name: fade-image-in;
        animation-duration: var(--animation-duration, 1000ms);
        animation-timing-function: var(--animation-timing-function, cubic-bezier(.27,.03,.31,.99));
        animation-delay: var(--animation-delay, 0ms);
        animation-iteration-count: 1;
        animation-direction: normal;
        animation-fill-mode: forwards;
    }

    .blur-in {
        filter: blur(var(--blur-at-start, 10px));
        animation-name: blur-in;
        animation-duration: var(--animation-duration, 1000ms);
        animation-timing-function: var(--animation-timing-function, cubic-bezier(.27,.03,.31,.99));
        animation-delay: var(--animation-delay, 0ms);
        animation-iteration-count: 1;
        animation-direction: normal;
        animation-fill-mode: forwards;
    }

    .fly-in {
        opacity: var(--opacity-start, 0);
        translate: var(--x-translate, 15%) var(--y-translate, 0%);
        animation-name: fly-in;
        animation-duration: var(--animation-duration, 1000ms);
        animation-timing-function: var(--animation-timing-function, cubic-bezier(.27,.03,.31,.99));
        animation-delay: var(--animation-delay, 0ms);
        animation-iteration-count: 1;
        animation-direction: normal;
        animation-fill-mode: forwards;
    }

    .animate-gradient {
        animation: gradient 5s linear infinite;
    }

    @keyframes move-up {
        from {
            transform: translateY(100%);
        }
        to {
            transform: translateY(0);
        }
    }
    @keyframes rotate-up {
        from {
            transform: rotateX(-30deg);
        }
        to {
            transform: rotateX(0deg);
        }
    }
    @keyframes expand-in {
        from {
            max-width: var(--max-width-start, 0);
            max-height: var(--max-height-start, 100%);
            opacity: .25;
        }
        to {
            max-width: var(--max-width, 100%);
            max-height: var(--max-height, 100%);
            opacity: 1;
        }
    }
    @keyframes fade-in {
        from {
            opacity: var(--opacity-at-start, 0);
        }
        to {
            opacity: 1;
        }
    }
    @keyframes fade-image-in {
        from {
            opacity: var(--opacity-at-start, 0);
            filter: blur(var(--blur-at-start, 20px))
        }
        80% {
            filter: blur(0px)
        }
        to {
            opacity: 1;
        }
    }

    @keyframes fly-in {
        from {
            opacity: var(--opacity-start, 0);
            translate: var(--x-translate, -15%) var(--y-translate, 0%);
        }
        to {
            opacity: 1;
            translate: 0 0;
        }
    }

    @keyframes blur-in {
        from {
            filter: blur(var(--blur-at-start, 10px));
        }
        to {
            filter: blur(0);
        }
    }

    @keyframes gradient {
        0% {
            background-position: 0% 50%;
        }
        50% {
            background-position: 100% 50%;
        }
        100% {
            background-position: 0% 50%;
        }
    }
}